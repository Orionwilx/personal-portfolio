---
import SpringBootIcon from "../icons/SpringBoot.astro";
import SqlServerIcon from "../icons/SqlServer.astro";
import DockerIcon from "../icons/Docker.astro";
import MongoIcon from "../icons/Mongo.astro";
import JavaIcon from "../icons/Java.astro";
import Github from "../icons/Github.astro";

const TAGS = {
  REACT: {
    name: "React",
    class: "",
    icon: "react",
  },
  NODE: {
    name: "Node.js",
    class: "",
    icon: "nodejs",
  },
  SPRING_BOOT: {
    name: "Spring Boot",
    class: "bg-[#1b4900c0] text-white",
    icon: SpringBootIcon,
  },
  JAVA: {
    name: "Java",
    class: "bg-[#dfdfdf] text-black",
    icon: JavaIcon,
  },
  DOCKER: {
    name: "Docker",
    class: "bg-[#002d47] text-white",
    icon: DockerIcon,
  },
  SQL_SERVER: {
    name: "SQL Server",
    class: "bg-[#2f0404] text-white",
    icon: SqlServerIcon,
  },
  MONGODB: {
    name: "MongoDB",
    class: "bg-[#275f18] text-white",
    icon: MongoIcon,
  },
  GITHUB: {
    name: "GitHub",
    class: "bg-[#dfdfdf] text-black",
    icon: Github,
  },
  GIT: {
    name: "Git",
    class: "",
    icon: "git",
  },
};
const projects = [
  {
    title: "MicroCommerce Spring Boot",
    description:
      "E-commerce system based on microservices architecture built with Spring Boot. This architecture enables scalability, resilience, and independent development of each component.",
    image: "/public/curso-microservicios-ibm-coursera.webp",
    link: "https://github.com/Orionwilx/MicroCommerce-SpringBoot",
    tags: [
      TAGS.SPRING_BOOT,
      TAGS.DOCKER,
      TAGS.SQL_SERVER,
      TAGS.MONGODB,
      TAGS.JAVA,
      TAGS.GITHUB,
    ],
  },
  // Add more projects as needed
];
---

{
  projects.map(({ title, description, image, link, tags }) => (
    <article class=" shadow-md rounded-lg p-6 mb-6">
      <img
        src={image}
        alt={`Captura de pantalla del proyecto${title}`}
        class="max-w-max h-60 object-cover rounded-lg mb-4 shadow-2xl shadow-white/10"
      />
      <h3 class="text-2xl font-semibold text-yellow-200 mb-2">{title}</h3>
      <p class="text-gray-400 mb-4">{description}</p>
      <a
        href={link}
        class="inline-flex items-center px-4 py-2 mb-3 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-lg hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:outline-none focus:ring-gray-100 focus:text-blue-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700 dark:focus:ring-gray-700"
      >
        Ver Proyecto{" "}
        <svg
          class="w-3 h-3 ms-2 rtl:rotate-180"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 14 10"
        >
          <path
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M1 5h12m0 0L9 1m4 4L9 9"
          />
        </svg>
      </a>
      <ul class="flex gap-2 flex-row mb-4">
        {tags.map((tag) => (
          <li>
            <span
              class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-3 px-2`}
            >
              <tag.icon class="size-4" />
              {tag.name}
            </span>
          </li>
        ))}
      </ul>
    </article>
  ))
}
